9:44:12 server started at http://0.0.0.0:3300
9:50:7 server started at http://0.0.0.0:3300
9:50:8 request IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     emitClose: true,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1251,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1251,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers:
   { host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rawHeaders:
   [ 'Host',
     '0.0.0.0:3300',
     'Connection',
     'keep-alive',
     'Upgrade-Insecure-Requests',
     '1',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     'Cookie',
     '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1251,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/',
     path: '/',
     href: '/',
     _raw: '/' },
  params: {},
  query: {},
  res:
   ServerResponse {
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1251,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1251,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },
  route:
   Route { path: '/', stack: [ [Layer] ], methods: { get: true } } }
9:50:8 response ServerResponse {
  _events: { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1251,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1251,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1251,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1251,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: false,
     headers:
      { host: '0.0.0.0:3300',
        connection: 'keep-alive',
        'upgrade-insecure-requests': '1',
        'user-agent':
         'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
        accept:
         'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
        'accept-encoding': 'gzip, deflate',
        'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
        cookie:
         '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
     rawHeaders:
      [ 'Host',
        '0.0.0.0:3300',
        'Connection',
        'keep-alive',
        'Upgrade-Insecure-Requests',
        '1',
        'User-Agent',
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
        'Accept-Encoding',
        'gzip, deflate',
        'Accept-Language',
        'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
        'Cookie',
        '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '/',
     method: 'GET',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1251,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     next: [Function: next],
     baseUrl: '',
     originalUrl: '/',
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/' },
     params: {},
     query: {},
     res: [Circular],
     route: Route { path: '/', stack: [Array], methods: [Object] } },
  locals: {},
  [Symbol(isCorked)]: false,
  [Symbol(outHeadersKey)]: { 'x-powered-by': [ 'X-Powered-By', 'Express' ] } }
9:51:34 server started at http://0.0.0.0:3300
9:51:35 request IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     emitClose: true,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1542,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1542,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers:
   { host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rawHeaders:
   [ 'Host',
     '0.0.0.0:3300',
     'Connection',
     'keep-alive',
     'Upgrade-Insecure-Requests',
     '1',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     'Cookie',
     '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1542,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/',
     path: '/',
     href: '/',
     _raw: '/' },
  params: {},
  query: {},
  res:
   ServerResponse {
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1542,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 1542,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },
  route:
   Route { path: '/', stack: [ [Layer] ], methods: { get: true } } }
9:51:35 test
11:9:21 server started at http://0.0.0.0:3300
11:10:6 server started at http://0.0.0.0:3300
11:10:48 server started at http://0.0.0.0:3300
11:28:0 server started at http://0.0.0.0:3300
11:29:4 listening server at http://0.0.0.0:3000
11:29:13 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     purpose: 'prefetch',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"12b-dm2B9skXXe9zUnEVAAHQFjFGaKw"' },
  rejectUnauthorized: false,
  protocol: 'htpp:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: null,
  path: '/api/topic/all',
  method: 'GET' }
11:30:16 listening server at http://0.0.0.0:3000
11:30:21 server started at http://0.0.0.0:3300
11:30:38 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'htpp:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: null,
  path: '/api/topic/all',
  method: 'GET' }
11:31:3 server started at http://0.0.0.0:3300
11:31:6 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:31:6 debug options method GET
11:35:47 server started at http://0.0.0.0:3300
11:35:51 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:35:51 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:35:51 debug options method GET
11:37:2 server started at http://0.0.0.0:3300
11:37:9 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:37:9 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:37:9 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:37:9 debug options method GET
11:38:42 server started at http://0.0.0.0:3300
11:38:44 request1 IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     emitClose: true,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 3470,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 3470,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers:
   { host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rawHeaders:
   [ 'Host',
     '0.0.0.0:3300',
     'Connection',
     'keep-alive',
     'Cache-Control',
     'max-age=0',
     'Upgrade-Insecure-Requests',
     '1',
     'User-Agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     'Cookie',
     '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'If-None-Match',
     'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/api/topic/all',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '4:0.0.0.0:3300',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 6 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage:
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 3470,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 12,
        [Symbol(triggerId)]: 11 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/topic/all',
  _parsedUrl:
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/topic/all',
     path: '/api/topic/all',
     href: '/api/topic/all',
     _raw: '/api/topic/all' },
  params: { '0': 'topic/all' },
  query: {},
  res:
   ServerResponse {
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [Timeout],
           _idleNext: [TimersList],
           _idleStart: 3470,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [Timeout],
           _idleNext: [TimersList],
           _idleStart: 3470,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 12,
           [Symbol(triggerId)]: 11 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] } },
  body: {},
  route:
   Route {
     path: '/api/*',
     stack:
      [ [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer],
        [Layer] ],
     methods:
      { acl: true,
        bind: true,
        checkout: true,
        connect: true,
        copy: true,
        delete: true,
        get: true,
        head: true,
        link: true,
        lock: true,
        'm-search': true,
        merge: true,
        mkactivity: true,
        mkcalendar: true,
        mkcol: true,
        move: true,
        notify: true,
        options: true,
        patch: true,
        post: true,
        propfind: true,
        proppatch: true,
        purge: true,
        put: true,
        rebind: true,
        report: true,
        search: true,
        source: true,
        subscribe: true,
        trace: true,
        unbind: true,
        unlink: true,
        unlock: true,
        unsubscribe: true } } }
11:38:44 debug options method GET
11:38:44 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:38:44 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:38:44 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:40:4 server started at http://0.0.0.0:3300
11:40:5 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'cache-control': 'max-age=0',
  'upgrade-insecure-requests': '1',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  accept:
   'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
  'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' }
11:40:5 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:40:5 debug options method GET
11:40:5 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:40:5 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:42:10 server started at http://0.0.0.0:3300
11:42:11 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'cache-control': 'max-age=0',
  'upgrade-insecure-requests': '1',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  accept:
   'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
  'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' }
11:42:11 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:42:11 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:42:11 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:42:11 debug options method GET
11:42:11 res IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     emitClose: true,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: { end: [Function: responseOnEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        free: [Function: onFree],
        close: [Array],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: [ClientRequest],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage:
      ClientRequest {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header:
         'GET /api/topic/all HTTP/1.1\r\nContent-Type: application/json\r\nhost: 0.0.0.0:3300\r\nconnection: keep-alive\r\ncache-control: max-age=0\r\nupgrade-insecure-requests: 1\r\nuser-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\r\naccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\naccept-encoding: gzip, deflate\r\naccept-language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6\r\ncookie: _ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g\r\nif-none-match: W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/api/topic/all',
        _ended: false,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 30,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        free: [Function: onFree],
        close: [Array],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: [ClientRequest],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage:
      ClientRequest {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header:
         'GET /api/topic/all HTTP/1.1\r\nContent-Type: application/json\r\nhost: 0.0.0.0:3300\r\nconnection: keep-alive\r\ncache-control: max-age=0\r\nupgrade-insecure-requests: 1\r\nuser-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\r\naccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\naccept-encoding: gzip, deflate\r\naccept-language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6\r\ncookie: _ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g\r\nif-none-match: W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/api/topic/all',
        _ended: false,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 30,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers:
   { 'x-powered-by': 'Express',
     etag: 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"',
     date: 'Wed, 14 Nov 2018 03:42:11 GMT',
     connection: 'keep-alive' },
  rawHeaders:
   [ 'X-Powered-By',
     'Express',
     'ETag',
     'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"',
     'Date',
     'Wed, 14 Nov 2018 03:42:11 GMT',
     'Connection',
     'keep-alive' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 304,
  statusMessage: 'Not Modified',
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      { end: [Array],
        free: [Function: onFree],
        close: [Array],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: [ClientRequest],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     _httpMessage:
      ClientRequest {
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header:
         'GET /api/topic/all HTTP/1.1\r\nContent-Type: application/json\r\nhost: 0.0.0.0:3300\r\nconnection: keep-alive\r\ncache-control: max-age=0\r\nupgrade-insecure-requests: 1\r\nuser-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\r\naccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\naccept-encoding: gzip, deflate\r\naccept-language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6\r\ncookie: _ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g\r\nif-none-match: W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/api/topic/all',
        _ended: false,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 30,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _consuming: false,
  _dumped: false,
  req:
   ClientRequest {
     _events:
      { error: [Function], prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: [HTTPParser],
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: [HTTPParser],
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 30,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'GET /api/topic/all HTTP/1.1\r\nContent-Type: application/json\r\nhost: 0.0.0.0:3300\r\nconnection: keep-alive\r\ncache-control: max-age=0\r\nupgrade-insecure-requests: 1\r\nuser-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\r\naccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\r\naccept-encoding: gzip, deflate\r\naccept-language: en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6\r\ncookie: _ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g\r\nif-none-match: W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path: '/api/topic/all',
     _ended: false,
     res: [Circular],
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Socket],
        incoming: [Circular],
        outgoing: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncomingClient] },
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      { 'content-type': [Array],
        host: [Array],
        connection: [Array],
        'cache-control': [Array],
        'upgrade-insecure-requests': [Array],
        'user-agent': [Array],
        accept: [Array],
        'accept-encoding': [Array],
        'accept-language': [Array],
        cookie: [Array],
        'if-none-match': [Array] } } }
11:42:47 server started at http://0.0.0.0:3300
11:42:49 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'cache-control': 'max-age=0',
  'upgrade-insecure-requests': '1',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  accept:
   'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
  'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' }
11:42:49 debug options method GET
11:42:49 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:42:49 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:42:49 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:42:49 res { 'x-powered-by': 'Express',
  etag: 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"',
  date: 'Wed, 14 Nov 2018 03:42:49 GMT',
  connection: 'keep-alive' }
11:43:26 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'cache-control': 'max-age=0',
  'upgrade-insecure-requests': '1',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  accept:
   'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
  'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' }
11:43:26 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:43:26 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:43:26 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:43:26 debug options method GET
11:43:26 res { 'x-powered-by': 'Express',
  etag: 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"',
  date: 'Wed, 14 Nov 2018 03:43:26 GMT',
  connection: 'keep-alive' }
11:44:37 server started at http://0.0.0.0:3300
11:44:38 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'cache-control': 'max-age=0',
  'upgrade-insecure-requests': '1',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  accept:
   'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
  'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' }
11:44:38 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'cache-control': 'max-age=0',
     'upgrade-insecure-requests': '1',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     accept:
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
11:44:38 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:44:38 debug options method GET
11:44:38 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:44:38 res { 'x-powered-by': 'Express',
  etag: 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"',
  date: 'Wed, 14 Nov 2018 03:44:38 GMT',
  connection: 'keep-alive' }
11:48:57 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
11:48:57 debug options method POST
11:48:57 debug body {"title":"nodeclub","content":"node11"} string
11:48:57 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
11:48:57 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:48:57 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:48:57 res { 'x-powered-by': 'Express',
  'content-security-policy': 'default-src \'self\'',
  'x-content-type-options': 'nosniff',
  'content-type': 'text/html; charset=utf-8',
  'content-length': '153',
  date: 'Wed, 14 Nov 2018 03:48:57 GMT',
  connection: 'keep-alive' }
11:48:57 debug data <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /api/topic/add</pre>
</body>
</html>

11:50:20 server started at http://0.0.0.0:3300
11:50:31 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
11:50:31 debug options method POST
11:50:31 debug body {"title":"nodeclub","content":"node11"} string
11:50:31 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
11:50:31 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:50:31 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:50:31 res { 'x-powered-by': 'Express',
  'content-security-policy': 'default-src \'self\'',
  'x-content-type-options': 'nosniff',
  'content-type': 'text/html; charset=utf-8',
  'content-length': '153',
  date: 'Wed, 14 Nov 2018 03:50:31 GMT',
  connection: 'keep-alive' }
11:50:31 debug data <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /api/topic/add</pre>
</body>
</html>

11:55:46 server started at http://0.0.0.0:3300
11:55:50 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
11:55:50 debug options method POST
11:55:50 debug body {"title":"nodeclub","content":"node11"} string
11:55:50 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
11:55:50 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:55:50 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:55:50 res { 'x-powered-by': 'Express',
  'content-security-policy': 'default-src \'self\'',
  'x-content-type-options': 'nosniff',
  'content-type': 'text/html; charset=utf-8',
  'content-length': '153',
  date: 'Wed, 14 Nov 2018 03:55:50 GMT',
  connection: 'keep-alive' }
11:55:50 debug data <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /api/topic/add</pre>
</body>
</html>

11:57:10 server started at http://0.0.0.0:3300
11:57:16 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
11:57:16 debug options method POST
11:57:16 debug body {"title":"nodeclub","content":"node11"} string
11:57:16 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
11:57:16 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:57:16 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:57:16 res { 'x-powered-by': 'Express',
  'content-security-policy': 'default-src \'self\'',
  'x-content-type-options': 'nosniff',
  'content-type': 'text/html; charset=utf-8',
  'content-length': '153',
  date: 'Wed, 14 Nov 2018 03:57:16 GMT',
  connection: 'keep-alive' }
11:57:16 debug data <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>Cannot POST /api/topic/add</pre>
</body>
</html>

11:57:46 server started at http://0.0.0.0:3300
11:57:57 listening server at http://0.0.0.0:3000
11:58:3 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
11:58:4 debug options method POST
11:58:4 debug body {"title":"nodeclub","content":"node11"} string
11:58:3 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
11:58:3 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:58:3 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:58:4 res { 'x-powered-by': 'Express',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '127',
  etag: 'W/"7f-oh3ZL//VIGszPwVVqCef/+ca42g"',
  date: 'Wed, 14 Nov 2018 03:58:04 GMT',
  connection: 'keep-alive' }
11:58:4 debug data {"success":true,"data":{"id":2,"created_time":1542167884012,"updated_time":1542167884012,"title":"","content":""},"message":""}
11:59:35 listening server at http://0.0.0.0:3000
11:59:38 server started at http://0.0.0.0:3300
11:59:46 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
11:59:46 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
11:59:46 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
11:59:46 debug options method POST
11:59:46 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
11:59:46 debug body {"title":"nodeclub","content":"node11"} string
11:59:46 res { 'x-powered-by': 'Express',
  'content-security-policy': 'default-src \'self\'',
  'x-content-type-options': 'nosniff',
  'content-type': 'text/html; charset=utf-8',
  'content-length': '1442',
  date: 'Wed, 14 Nov 2018 03:59:46 GMT',
  connection: 'keep-alive' }
11:59:46 debug data <!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Error</title>
</head>
<body>
<pre>ReferenceError: log is not defined<br> &nbsp; &nbsp;at router.post (/Users/milesmao233/nodejs/node/exercise/bridge/api/topic.js:18:5)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at next (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/route.js:137:13)<br> &nbsp; &nbsp;at Route.dispatch (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/route.js:112:3)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at /Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/index.js:281:22<br> &nbsp; &nbsp;at Function.process_params (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/index.js:335:12)<br> &nbsp; &nbsp;at next (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/index.js:275:10)<br> &nbsp; &nbsp;at Function.handle (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/index.js:174:3)<br> &nbsp; &nbsp;at router (/Users/milesmao233/nodejs/node/exercise/bridge/node_modules/express/lib/router/index.js:47:12)</pre>
</body>
</html>

12:0:2 server started at http://0.0.0.0:3300
12:0:4 listening server at http://0.0.0.0:3000
12:0:8 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
12:0:8 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
12:0:8 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
12:0:8 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:0:8 debug body {"title":"nodeclub","content":"node11"} string
12:0:8 debug options method POST
12:0:9 res { 'x-powered-by': 'Express',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '127',
  etag: 'W/"7f-xEncR3GUDYjP27JaLwSEHxJ9uwI"',
  date: 'Wed, 14 Nov 2018 04:00:09 GMT',
  connection: 'keep-alive' }
12:0:9 debug data {"success":true,"data":{"id":3,"created_time":1542168009019,"updated_time":1542168009019,"title":"","content":""},"message":""}
12:19:53 listening server at http://0.0.0.0:3000
12:19:59 server started at http://0.0.0.0:3300
12:20:14 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
12:20:14 debug options method POST
12:20:14 debug body {"title":"nodeclub","content":"node11"} string
12:20:14 2
12:20:14 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
12:20:14 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
12:20:14 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:20:14 option { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:20:14 res { 'x-powered-by': 'Express',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '127',
  etag: 'W/"7f-LHFdmlxcF7KgikosGkeQSNfaV9M"',
  date: 'Wed, 14 Nov 2018 04:20:14 GMT',
  connection: 'keep-alive' }
12:20:14 debug data {"success":true,"data":{"id":4,"created_time":1542169214860,"updated_time":1542169214860,"title":"","content":""},"message":""}
12:27:6 listening server at http://0.0.0.0:3000
12:27:8 server started at http://0.0.0.0:3300
12:32:20 listening server at http://0.0.0.0:3000
12:34:4 listening server at http://0.0.0.0:3000
12:40:42 server started at http://0.0.0.0:3300
12:40:44 listening server at http://0.0.0.0:3000
12:40:56 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
12:40:56 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
12:40:56 debug options method POST
12:40:56 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:40:56 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
12:40:56 debug body {"title":"nodeclub","content":"node11"} string
12:41:15 listening server at http://0.0.0.0:3000
12:41:18 server started at http://0.0.0.0:3300
12:41:22 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
12:41:22 debug options method POST
12:41:22 debug body {"title":"nodeclub","content":"node11"} string
12:41:22 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:41:22 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
12:41:22 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
12:41:22 option { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:41:22 res { 'x-powered-by': 'Express',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '141',
  etag: 'W/"8d-mwp3IMgXO2Gy8pf/gUHr6coJYI8"',
  date: 'Wed, 14 Nov 2018 04:41:22 GMT',
  connection: 'keep-alive' }
12:41:22 debug data {"success":true,"data":{"id":7,"created_time":1542170482656,"updated_time":1542170482656,"title":"nodeclub","content":"node11"},"message":""}
12:42:42 listening server at http://0.0.0.0:3000
12:42:44 server started at http://0.0.0.0:3300
12:42:51 request1 { host: '0.0.0.0:3300',
  connection: 'keep-alive',
  'content-length': '39',
  origin: 'http://0.0.0.0:3300',
  'user-agent':
   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type': 'application/json',
  accept: '*/*',
  referer: 'http://0.0.0.0:3300/',
  'accept-encoding': 'gzip, deflate',
  'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
  cookie:
   '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' }
12:42:51 debug options method POST
12:42:51 debug body {"title":"nodeclub","content":"node11"} string
12:42:51 options { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:42:51 url result Url {
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/',
  href: 'http://0.0.0.0:3000/' }
12:42:51 apiOption { headers: { 'Content-Type': 'application/json' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/' }
12:42:51 option { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'content-length': '39',
     origin: 'http://0.0.0.0:3300',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/add',
  method: 'POST' }
12:42:51 debug data {"success":true,"data":{"id":8,"created_time":1542170571740,"updated_time":1542170571740,"title":"nodeclub","content":"node11"},"message":""}
12:42:51 res { 'x-powered-by': 'Express',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '141',
  etag: 'W/"8d-Chyv7wmLOZko30oLm6/KDSN/sgQ"',
  date: 'Wed, 14 Nov 2018 04:42:51 GMT',
  connection: 'keep-alive' }
12:49:32 listening server at http://0.0.0.0:3000
13:20:27 server started at http://0.0.0.0:3300
13:20:29 listening server at http://0.0.0.0:3000
13:20:46 options 0.0.0.0:3000
13:20:46 debug options method GET
13:20:46 option { headers:
   { 'Content-Type': 'application/json',
     host: '0.0.0.0:3300',
     connection: 'keep-alive',
     'user-agent':
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
     'content-type': 'application/json',
     accept: '*/*',
     referer: 'http://0.0.0.0:3300/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,la;q=0.6',
     cookie:
      '_ga=GA1.1.1813393393.1541661674; UM_distinctid=166f232485dac9-0a44b8e6c19109-1e396652-e1000-166f232485ebfb; CNZZDATA1254020586=121681383-1541661673-http%253A%252F%252F0.0.0.0%253A4000%252F%7C1541661673; session=eyJ1aWQiOjF9; session.sig=rdPmXbDdQRocteqo5dpD-zI9A0g',
     'if-none-match': 'W/"8d-W6drQYeV2M73PDW3cpskwLkNTco"' },
  rejectUnauthorized: false,
  protocol: 'http:',
  slashes: true,
  auth: null,
  host: '0.0.0.0:3000',
  port: '3000',
  hostname: '0.0.0.0',
  hash: null,
  search: null,
  query: null,
  pathname: '/',
  path: '/api/topic/all',
  method: 'GET' }
13:20:46 res { 'x-powered-by': 'Express',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '820',
  etag: 'W/"334-Xw9CJTFMRVxbJHzBk80aoFocZXk"',
  date: 'Wed, 14 Nov 2018 05:20:46 GMT',
  connection: 'keep-alive' }
13:20:46 debug data {"success":true,"data":[{"id":1,"created_time":1542159493648,"updated_time":1542159493648,"title":"测试","content":"哈喽"},{"id":2,"created_time":1542167884012,"updated_time":1542167884012,"title":"","content":""},{"id":3,"created_time":1542168009019,"updated_time":1542168009019,"title":"","content":""},{"id":4,"created_time":1542169214860,"updated_time":1542169214860,"title":"","content":""},{"id":5,"created_time":1542169955863,"updated_time":1542169955863,"title":"","content":""},{"id":6,"created_time":1542170061263,"updated_time":1542170061263,"title":"nodeclub","content":"node11"},{"id":7,"created_time":1542170482656,"updated_time":1542170482656,"title":"nodeclub","content":"node11"},{"id":8,"created_time":1542170571740,"updated_time":1542170571740,"title":"nodeclub","content":"node11"}],"message":""}
8:23:6 listening server at http://0.0.0.0:3000
8:23:10 server started at http://0.0.0.0:3300
9:15:28 debug options method GET
9:19:45 debug options method POST
9:19:45 debug body {"title":"ttt","content":"ttt"} string
9:19:45 debug data {"success":true,"data":{"id":9,"created_time":1542244785218,"updated_time":1542244785218,"title":"ttt","content":"ttt"},"message":""}
9:26:3 debug options method POST
9:26:3 debug body {"title":"aaa","content":"tttaaa"} string
9:26:3 debug data {"success":true,"data":{"id":10,"created_time":1542245163307,"updated_time":1542245163307,"title":"aaa","content":"tttaaa"},"message":""}
9:27:31 debug options method POST
9:27:31 debug body {"title":"sina","content":"sina"} string
9:27:31 debug data {"success":true,"data":{"id":11,"created_time":1542245251092,"updated_time":1542245251092,"title":"sina","content":"sina"},"message":""}
9:28:31 debug options method POST
9:28:31 debug body {"title":"bili","content":"bili"} string
9:28:31 debug data {"success":true,"data":{"id":12,"created_time":1542245311944,"updated_time":1542245311944,"title":"bili","content":"bili"},"message":""}
9:29:23 debug options method POST
9:29:23 debug body {"title":"gg","content":"ggg"} string
9:29:23 debug data {"success":true,"data":{"id":13,"created_time":1542245363347,"updated_time":1542245363347,"title":"gg","content":"ggg"},"message":""}
9:31:4 debug options method POST
9:31:4 debug body {"title":"welcome","content":"welcome"} string
9:31:4 debug data {"success":true,"data":{"id":14,"created_time":1542245464843,"updated_time":1542245464843,"title":"welcome","content":"welcome"},"message":""}
